from bs4 import BeautifulSoup
import requests

website = 'https://www.reuters.com/finance/deals/mergers'
website2 = 'https://www.reuters.com'
source = requests.get(website).text
soup = BeautifulSoup(source, 'lxml')
i = int(0)
def article_function(soup):
    #created a function so that I could just call it
    #over and over instead of repasting my code(recursion?)
    for article in soup.select('div[class="column1 col col-10"] article'):
        headline = article.div.a.h3.text.strip()
        #threw in strip() to fix the issue of a bunch of
        #space being printed before the headline title.
        print(headline+ "\n")
        date = article.find("span",class_ = 'timestamp').text
        print(date + '\n')
        summary = article.find("div", class_="story-content").p.text
        print(summary + "\n")
        link = article.find('div', class_='story-content').a['href']
        #this bit [href] is the syntax needed for me to
        #pull out the URL from the html code
        origin = "https://www.reuters.com/finance/deals/mergers"
        print(origin + link + "\n")
    return

#article_function(soup)

#This section here is another part I'm working on to get the scraper to go to
#the next page and continue scraping for headlines, dates, summaries, and links
#def next_page(soup):


next_page = soup.find('a', class_='control-nav-next')["href"]
https://www.reuters.com/news/archive/mergersnews?view=page&page= 3 &pageSize=10

source2 = requests.get(website2 + next_page).text
soup2 = BeautifulSoup(source2, 'lxml')
def next_page_function(soup2):
    for article in soup2.select('div[class="column1 col col-10"] article'):
        headline2 = article.find('h3', class_= 'story-title').text.strip()
        #threw in strip() to fix the issue of a bunch of space being printed before the headline title.
        print(headline2 + '\n')
        date2 = article.find("span",class_ = 'timestamp').text
        print(date2 + '\n')
        summary2 = article.find("div", class_="story-content").p.text
        print(summary2 + "\n")
        link2 = article.find('div', class_='story-content').a['href']
        #this bit [href] is the syntax needed for me to pull out the URL from the html code
        origin = "https://www.reuters.com/finance/deals/mergers"
        print(origin + link2 + "\n")
    return
